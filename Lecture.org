#+TITLE: Making Websites for Beginners
#+AUTHOR: Clarissa Littler
#+OPTIONS: H:2 toc:nil
#+startup: beamer
#+BEAMER_THEME: Madrid
#+LaTeX_CLASS: beamer

* Project outline						   :noexport:
** Requirements for a project 
   First, what we need for a project is something that will show
   + some CSS
   + some HTML
   + a very limited amount of JavaScript
this kind of project should be something like a small site that has
   + a menu that drops down and gives options
   + has several columns, each of which is formatted differently
   + uses semantic markup such as
     + =strong=
     + =em=
     + =s=
     + =small=
     + =b=
     + =i=
   + includes both block and inline elements
   + uses a number of divs and spans for marking up text
** Project Idea
*** Your biographic site
    The idea here is that you make a small site that lays out your interests and your hobbies and your life story.
    
    As an example site, let's consider something like the following
    #+BEGIN_SRC html :exports none :tangle MyselfMain.html
      <!doctype html>
      <html>
        <head>
          <style>
            .col {
              width: 33%;
              border: 3px solid black;
              float: left;
            }
            html {
              min-height: 100%;
              position: relative;
            }
            .keyword {
              color: crimson;
            }
          </style>
          <script>
            function toggleContent(id){
              var el = document.getElementById(id);
              if (el.style.display === "none"){
           
              }
            }
      
            window.onload = function () {
        
            }
          </script>
        </head>
        <body>
          <header>
            <h1>My Own Domain</h1>
            <p>by Ms. Littler</p>
          </header>

          <nav>
            <ul>
              <li style="display: inline;", id="hobbieslink">Hobbies</li>
              <li style="display: inline;", id="biolink">Biography</li>
              <li style="display: inline;", id="worlddomination">Plans for World Domination</li>
            </ul>
          </nav>

          <div class="col">
            <h2>My hobbies</h2>
            <div id="hobbies">
              <ol>
                <li> Wearing ill-fitting hats </li>
                <li> Holding chickens </li>
                <li> Whispering voicelessly into the night, hoping something wicked answers. </li>
              </ol>
            </div>
          </div>
    
          <div class="col">
            <h2>About me</h2>
            <div >
            <p>
            A total nerd who smells like wet dog.
            </p>
            <p>
            Like. <span class="keyword">Always</span>.
            </p>
            <p>
              <small>it's all very strange</small>
            </p>
            </div>
          </div>
    
          <div class="col">
            <h4>And here we have a touch of JavaScript</h4>
            <ul id="collapse">
              <li> Here is a collapseable list </li>
              <li> That has a number of elements </li>
              <li> Which should appear when we mouse over </li>
              <li> And disappear when we mouse away </li>
            </ul>
          </div>
        </body>
      </html>
    #+END_SRC

* What is this class?
** What we'll cover
   + The basic technology that goes into a webpage/site
** What we won't cover
   + How to build the back-end of a site \pause
   + How to program in JavaScript in general \pause
     + Though there are free supplements for that \pause
   + A majority of CSS and HTML
** Class mechanics
   + Two hours \pause
   + Project based \pause
     + I'll show.. \pause
     + and you follow
** What will we build?
   (Show off the website we're building)
* What is a website?
** Client vs. server
** How your browser loads a site
   + Find the server \pause
   + Request the page \pause
   + Receive the page \pause
   + Render the page
** Finding the server: DNS
** Talking to the server: HTTP
** Rendering the webpage
** The three pieces of a web page
   + HTML \pause
   + CSS \pause
   + JavaScript
** HTML
  + The /content/ of the page \pause
    + Text \pause
    + Images \pause
    + Links \pause
    + Lists \pause
    + ... \pause
  + But not how it looks /per se/
** CSS
   + The /look/ of the page \pause
     + Text color \pause
     + Background color \pause
     + Size \pause
     + Font \pause
     + ... \pause
   + But not what's /on/ the page
** JavaScript
   + The /dynamics/ of the page \pause
     + What happens when you click \pause
     + What happens when you move your mouse \pause
     + What happens when you type \pause
     + ... \pause
   + Modifies both HTML and CSS as you use the site
* Basic HTML
** Our base page
** What *is* hypertext?
** Tags and Elements
** Attributes
** Links
** Ordered lists
*** Ordered lists in HTML 					      :BMCOL:
    :PROPERTIES:
    :BEAMER_col: 0.4
    :END:
   + ordered lists \pause
   + lists that start with /numbers/ \pause   

#+BEGIN_SRC html :exports none :tangle olistExample.html
  <!doctype html>

  <html>
    <body>
      <ol>
        <li>These</li>
        <li>Are</li>
        <li>Items</li>
        <li>In</li>
        <li>A</li>
        <li>List</li>
      </ol>
    </body>
  </html>
#+END_SRC
*** What it looks like						      :BMCOL:
    :PROPERTIES:
    :BEAMER_col: 0.4
    :END:
**** 
     Insert image of the example 
** Unordered lists
*** Unordered lists in HTML					      :BMCOL:
    :PROPERTIES:
    :BEAMER_col: 0.4
    :END:
*** What it looks like						      :BMCOL:
    :PROPERTIES:
    :BEAMER_col: 0.4
    :END:
** Paragraphs
** Headers
** Buttons
** Semantic Markup
** Marking up text
** Section
** Article
** Div
** Span
* Project Time I
** What the pages will look like
** How we'll do it
* CSS
** Our page with CSS
** Cascading Style Sheets
** Adding CSS to a page
** Choosing elements by ID
** Example: styling your concluding paragraph 
** Choosing elements by class
** Example: 
** Choosing elements by type
** Example: styling block quotes
** Combining all of them
** Putting the cascade in CSS
** Styling Divs and Spans
** Div
** Example: columns with divs
** Span
** Example: styling text with spans
* Project Time II
** What the pages will look like
** How we'll do it
* JavaScript
** Our page with JavaScript
** What is JavaScript?
   + A general purpose programming language \pause
   + Programming languages express computation \pause
   + 
** Why JavaScript?
** A smidgen of JavaScript: I
** A smidgen of JavaScript: II
** The Document Object Model (DOM)
   + Document Object Model (DOM) \pause
   + HTML $\Longleftrightarrow$ JavaScript \pause
   +  
** Example: Hiding and showing text
* Project Time III
** What the pages will look like
** How we'll do it
* Wrapup
** What we've learned
   + What a webpage is \pause
     + HTML \pause
     + CSS \pause
     + JavaScript \pause
** What we've learned
   + HTML \pause
     + Elements \pause
     + Tags \pause
     + Semantic markup
     + Content, not appearance
** What we've learned
   + CSS \pause
     + Style, not substance \pause
     + Selectors \pause
     + Classes
** What we've learned     
   + JavaScript \pause
     + A general purpose programming language \pause
     + Can be run by every browser \pause
     + Connects to HTML via Document Object Model
** What to learn next
   + More HTML tags \pause
   + So much more CSS \pause
   + Frameworks for styling \pause
     + Bootstrap is a very popular one \pause
   + JavaScript programming
** Questions?
